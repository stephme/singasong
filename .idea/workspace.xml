<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="3bf18649-9dec-4d28-a403-f2c79d86a6d1" name="Default Changelist" comment="" />
    <ignored path="$PROJECT_DIR$/out/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="SingSong" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/scala/HelloWorld/SingSongTest.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="375">
              <caret line="25" column="3" lean-forward="true" selection-start-line="25" selection-start-column="3" selection-end-line="25" selection-end-column="3" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/HelloWorld/SingSong.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state>
              <caret column="18" lean-forward="true" selection-start-column="18" selection-end-column="18" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/build.sbt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="105">
              <caret line="7" selection-start-line="7" selection-end-line="7" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>horse</find>
      <find>cat</find>
    </findStrings>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/build.sbt" />
        <option value="$PROJECT_DIR$/src/test/scala/HelloWorld/spec/sc.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/HelloWorld/sc.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/HelloWorld/test/sc.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/HelloWorld/Main.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/HelloWorld/HelloWorld.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/HelloWorld/SingSong.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/HelloWorld/SingSongTest.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="67" />
    <option name="y" value="113" />
    <option name="width" value="1680" />
    <option name="height" value="972" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="HelloWorld" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SingSong" type="b2602c69:ProjectViewProjectNode" />
              <item name="SingSong" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="HelloWorld" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="project.structure.last.edited" value="Libraries" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="org.jetbrains.plugins.scala.compiler.ScalaCompileServerForm" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.ScalaTests in 'HelloWorld'">
    <configuration name="SingSong" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="HelloWorld.SingSong" />
      <module name="SingSong" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="HelloWorld.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ScalaTests in 'HelloWorld'" type="ScalaTestRunConfiguration" factoryName="ScalaTest" nameIsGenerated="true">
      <module name="SingSong" />
      <setting name="path" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="All in package" />
      <setting name="package" value="HelloWorld" />
      <buffered bufClass="HelloWorld.SingSongTest" />
      <buffered bufClass="HelloWorld.SingSongTest" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SingSongTest" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="SingSong" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Class" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SingSongTest.it returns the valid song for the first set" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="SingSong" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="testName" value="it returns the valid song for the first set" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SingSongTest.it returns the valid song for the second set" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="SingSong" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="testName" value="it returns the valid song for the second set" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SingSongTest.singsong return the song" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="SingSong" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="HelloWorld.SingSongTest" />
      <setting name="testName" value="singsong return the song" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.SingSongTest.it returns the valid song for the second set" />
        <item itemvalue="ScalaTest.SingSongTest.it returns the valid song for the first set" />
        <item itemvalue="ScalaTest.SingSongTest.singsong return the song" />
        <item itemvalue="Application.SingSong" />
        <item itemvalue="ScalaTest.SingSongTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="SingSong" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="singsong [file:/Users/smeresse/Workspace/SingSong/]" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value="SingSong-build" />
                <option name="path" value="$PROJECT_DIR$/project" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$/build.sbt" value="4221115755" />
        <entry key="$PROJECT_DIR$/project/build.properties" value="2567920773" />
      </map>
    </option>
    <option name="projectSyncType">
      <map>
        <entry key="$USER_HOME$/Desktop/cobalt-core" value="PREVIEW" />
        <entry key="$USER_HOME$/Desktop/sepa_writer" value="PREVIEW" />
        <entry key="$USER_HOME$/Downloads/example" value="PREVIEW" />
        <entry key="$USER_HOME$/Downloads/recfun" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../cassandra-init" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../cobalt-core" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../cobalt-script" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../cobalt-test" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../requeteur_tech_readonly" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../sepa_parser" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../sepa_writer" value="PREVIEW" />
      </map>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3bf18649-9dec-4d28-a403-f2c79d86a6d1" name="Default Changelist" comment="" />
      <created>1549654431214</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1549654431214</updated>
    </task>
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="SingSongTest_singsong_return_the_song - 2019.02.08 at 22h 55m 23s.xml">
      <configuration name="SingSongTest.singsong return the song" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_singsong_return_the_song - 2019.02.08 at 23h 02m 29s.xml">
      <configuration name="SingSongTest.singsong return the song" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_second_set - 2019.02.08 at 23h 02m 54s.xml">
      <configuration name="SingSongTest.it returns the valid song for the second set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_first_set - 2019.02.08 at 23h 03m 03s.xml">
      <configuration name="SingSongTest.it returns the valid song for the first set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_second_set - 2019.02.08 at 23h 03m 08s.xml">
      <configuration name="SingSongTest.it returns the valid song for the second set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_second_set - 2019.02.08 at 23h 04m 08s.xml">
      <configuration name="SingSongTest.it returns the valid song for the second set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_second_set - 2019.02.08 at 23h 05m 36s.xml">
      <configuration name="SingSongTest.it returns the valid song for the second set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_second_set - 2019.02.08 at 23h 06m 04s.xml">
      <configuration name="SingSongTest.it returns the valid song for the second set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="SingSongTest_it_returns_the_valid_song_for_the_second_set - 2019.02.08 at 23h 06m 33s.xml">
      <configuration name="SingSongTest.it returns the valid song for the second set" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ScalaTests_in_'HelloWorld' - 2019.02.08 at 23h 06m 43s.xml">
      <configuration name="ScalaTests in 'HelloWorld'" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="23" width="1680" height="972" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Favorites" side_tool="true" />
      <window_info id="Designer" />
      <window_info id="Learn" />
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.24969475" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="sbt-shell-toolwindow" />
      <window_info anchor="bottom" id="Version Control" />
      <window_info anchor="bottom" id="Terminal" />
      <window_info anchor="bottom" id="Event Log" side_tool="true" />
      <window_info anchor="bottom" id="Build" weight="0.32954547" />
      <window_info anchor="bottom" id="Messages" weight="0.32954547" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32954547" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="right" id="Maven" />
      <window_info anchor="right" x="0" y="0" width="370" height="772" id="Documentation" sideWeight="0.50113636" side_tool="true" visible="true" weight="0.24420024" />
      <window_info anchor="right" id="Palette&#9;" />
      <window_info anchor="right" id="sbt" sideWeight="0.49886364" visible="true" weight="0.24420024" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
    </layout>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>middleSentence(x.name, xs.head.name)</expression-string>
        <language-id>Scala</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/main/scala/HelloWorld/sc.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="2" column="6" selection-start-line="2" selection-start-column="6" selection-end-line="2" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build.sbt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="105">
          <caret line="7" selection-start-line="7" selection-end-line="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/HelloWorld/SingSong.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="18" lean-forward="true" selection-start-column="18" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/HelloWorld/SingSongTest.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="25" column="3" lean-forward="true" selection-start-line="25" selection-start-column="3" selection-end-line="25" selection-end-column="3" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <last-edited>scala-sdk-2.12.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>SingSong-build</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>scala-sdk-2.12.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>